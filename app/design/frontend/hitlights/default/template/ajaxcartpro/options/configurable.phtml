<?php
/**
 * aheadWorks Co.
 *
 * NOTICE OF LICENSE
 *
 * This source file is subject to the EULA
 * that is bundled with this package in the file LICENSE.txt.
 * It is also available through the world-wide-web at this URL:
 * http://ecommerce.aheadworks.com/AW-LICENSE.txt
 *
 * =================================================================
 *                 MAGENTO EDITION USAGE NOTICE
 * =================================================================
 * This software is designed to work with Magento community edition and
 * its use on an edition other than specified is prohibited. aheadWorks does not
 * provide extension support in case of incorrect edition use.
 * =================================================================
 *
 * @category   AW
 * @package    AW_Ajaxcartpro
 * @version    3.2.7
 * @copyright  Copyright (c) 2010-2012 aheadWorks Co. (http://www.aheadworks.com)
 * @license    http://ecommerce.aheadworks.com/AW-LICENSE.txt
 */
?><?php
$_product    = $this->getProduct();
$_jsonProductValueConfig = $this->getProductJsonConfig();
$_attributes = Mage::helper('core')->decorateArray($this->getAllowAttributes());
?>
<?php if ($_product->isSaleable() && count($_attributes)):?>
    <script>
        var productValuesConfig = <?php echo $_jsonProductValueConfig ?>;
    </script>
    <dl>
    <?php foreach($_attributes as $_attribute): ?>
        <dt><label class="required"><em>*</em><?php echo $_attribute->getLabel() ?></label></dt>
        <dd<?php if ($_attribute->decoratedIsLast){?> class="last"<?php }?>>
          <select onchange="updateAcpSuperAttributePrice(<?php echo $_product->getId()?>);" name="super_attribute[<?php echo $_attribute->getAttributeId() ?>]" id="attribute<?php echo $_attribute->getAttributeId() ?>" class="required-entry super-attribute-select-acp">
            <option><?php echo $this->__('Choose an Option...') ?></option>
          </select>
        </dd>
    <?php endforeach; ?>
    </dl>
<?php
    $parts = parse_url($_SERVER['REQUEST_URI']);
    parse_str($parts['query'], $query);
    $allOpt = array();
    foreach ( $query as $key => $value ) {
        array_push( $allOpt, $value );
    }
?>
    <script type="text/javascript">

        spConfigAcp = new Product.ACPconfigurable(<?php echo $this->getJsonConfig() ?>);
        var attributes = $$('.super-attribute-select-acp');
        for(var i=0; i< attributes.length; i++){ //  attributes.length
            (function (attribute) {
                var options = attribute.options;
                jQuery.each(options, function(index, item) {
                    if (index > 0) {
                        var configs = item.config;
                        var arr = <?php echo json_encode($allOpt) ?>;

                        if (configs != undefined)
                        {
                            //console.log(configs, i, arr);
                            if(jQuery.inArray(configs.id, arr) != -1) {
                                options[index].selected = true;
                            }
                        }

                    }

                });

                spConfigAcp.configureElement(attribute);
            })(attributes[i]);
        }
    </script>
<?php endif;?>

